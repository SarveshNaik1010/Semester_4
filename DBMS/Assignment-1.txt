mysql> use semester_3
Database changed
mysql> CREATE TABLE teamInfo (
    ->     id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(50) DEFAULT NULL,
    ->     country VARCHAR(50) DEFAULT NULL,
    ->     estYear YEAR(4) DEFAULT NULL
    -> );
Query OK, 0 rows affected, 2 warnings (0.03 sec)

mysql> CREATE TABLE matchInfo (
    ->     id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ->     location VARCHAR(50) DEFAULT NULL,
    ->     startTime TIME DEFAULT NULL,
    ->     endTime TIME DEFAULT NULL,
    ->     matchDate DATE DEFAULT NULL,
    ->     teamId INT(11) DEFAULT NULL,
    ->     oppositionTeamId INT(11) DEFAULT NULL,
    ->     wonTeamId INT(11) DEFAULT NULL,
    ->     umpireName VARCHAR(50) DEFAULT NULL,
    ->     type VARCHAR(50) DEFAULT NULL,
    ->     CONSTRAINT fk_team FOREIGN KEY (teamId) REFERENCES teaminfo(id) ON DELETE SET NULL ON UPDATE CASCADE,
    ->     CONSTRAINT fk_opposition_team FOREIGN KEY (oppositionTeamId) REFERENCES teaminfo(id) ON DELETE SET NULL ON UPDATE CASCADE,
    ->     CONSTRAINT fk_won_team FOREIGN KEY (wonTeamId) REFERENCES teaminfo(id) ON DELETE SET NULL ON UPDATE CASCADE
    -> );
Query OK, 0 rows affected, 4 warnings (0.06 sec)

mysql> CREATE TABLE playerInfo (
    ->     id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(50) DEFAULT NULL,
    ->     birthdate DATE DEFAULT NULL,
    ->     joinedYear YEAR(4) DEFAULT NULL,
    ->     retirementYear YEAR(4) DEFAULT NULL
    -> );
Query OK, 0 rows affected, 3 warnings (0.02 sec)

mysql> CREATE TABLE matchPlayedPlayerInfo (
    ->     matchId INT(11),
    ->     teamId INT(11) DEFAULT NULL,
    ->     playerId INT(11) DEFAULT NULL,
    ->     playingAs VARCHAR(50) DEFAULT NULL,
    ->     CONSTRAINT fk_matchId FOREIGN KEY (matchId) REFERENCES matchInfo(id) ON DELETE SET NULL ON UPDATE CASCADE,
    ->     CONSTRAINT fk_teamId FOREIGN KEY (teamId) REFERENCES teamInfo(id) ON DELETE SET NULL ON UPDATE CASCADE,
    ->     CONSTRAINT fk_playerId FOREIGN KEY (playerId) REFERENCES playerInfo(id) ON DELETE SET NULL ON UPDATE CASCADE
    -> );
Query OK, 0 rows affected, 3 warnings (0.06 sec)

mysql> INSERT INTO teamInfo (name, country, estYear) 
    -> VALUES 
    -> ('India', 'India', 1932),
    -> ('Australia', 'Australia', 1977),
    -> ('England', 'England', 1970),
    -> ('South Africa', 'South Africa', 1989),
    -> ('New Zealand', 'New Zealand', 1930);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO playerInfo (name, birthdate, joinedYear, retirementYear) 
    -> VALUES
    -> ('Ravindra Jadeja', '1988-11-06', 2008, NULL),
    -> ('Steve Smith', '1989-06-02', 2010, NULL),
    -> ('Joe Root', '1990-12-30', 2013, NULL),
    -> ('AB de Villiers', '1984-02-17', 2004, 2022),
    -> ('Kane Williamson', '1990-08-08', 2010, NULL),
    -> ('David Warner', '1986-10-27', 2009, NULL),
    -> ('Ben Stokes', '1991-06-04', 2013, NULL),
    -> ('Mitchell Starc', '1990-01-30', 2010, NULL),
    -> ('Jofra Archer', '1995-04-01', 2016, NULL),
    -> ('Pat Cummins', '1993-05-08', 2011, NULL);
Query OK, 10 rows affected (0.01 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> INSERT INTO matchInfo (location, startTime, endTime, matchDate, teamId, oppositionTeamId, wonTeamId, umpireName, type) 
    -> VALUES
    -> ('Melbourne Cricket Ground', '10:00:00', '14:00:00', '2025-01-15', 1, 2, 1, 'Aleem Dar', 'Test Match'),
    -> ('Lord\'s Cricket Ground', '11:00:00', '15:00:00', '2025-01-16', 2, 3, 3, 'Marais Erasmus', 'ODI Match'),
    -> ('Eden Gardens', '09:30:00', '13:30:00', '2025-02-10', 3, 4, 4, 'Ruth Willis', 'T20 Match'),
    -> ('Wankhede Stadium', '15:00:00', '19:00:00', '2025-02-12', 5, 1, 5, 'Richard Kettleborough', 'Test Match'),
    -> ('Sydney Cricket Ground', '11:00:00', '15:00:00', '2025-03-01', 2, 5, 2, 'Nigel Llong', 'ODI Match');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO matchPlayedPlayerInfo (matchId, teamId, playerId, playingAs) 
    -> VALUES
    -> (1, 1, 1, 'All-Rounder'),
    -> (1, 1, 4, 'Batsman'),
    -> (1, 2, 2, 'Batsman'),
    -> (1, 2, 3, 'Bowler'), 
    -> (2, 2, 2, 'All-Rounder'),
    -> (2, 3, 5, 'Batsman'),
    -> (3, 3, 3, 'All-Rounder'),
    -> (4, 1, 1, 'Batsman'),
    -> (4, 5, 5, 'Batsman'),
    -> (5, 2, 2, 'All-Rounder'),
    -> (5, 5, 6, 'Bowler'); 
Query OK, 11 rows affected (0.01 sec)
Records: 11  Duplicates: 0  Warnings: 0

mysql> -- 1. List names of the umpire when Indian team won
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT umpireName from matchinfo
    -> WHERE `wonTeamId` = (SELECT id from teaminfo WHERE name = 'India');
+------------+
| umpireName |
+------------+
| Aleem Dar  |
+------------+
1 row in set (0.00 sec)

mysql> -- 2. List names of the players who have not played single match. 
Query OK, 0 rows affected (0.00 sec)

mysql> select p.name
    -> from playerinfo p
    -> LEFT JOIN matchPlayedPlayerInfo mp ON p.id = mp.playerId
    -> WHERE mp.`matchId` IS NULL;
+----------------+
| name           |
+----------------+
| Ben Stokes     |
| Mitchell Starc |
| Jofra Archer   |
| Pat Cummins    |
+----------------+
4 rows in set (0.00 sec)

mysql> -- 3. Find batsman scored maximum runs and batsman scored minimum runs and display their names
Query OK, 0 rows affected (0.00 sec)

mysql> ALTER TABLE playerinfo
    -> ADD COLUMN runs INT(11) DEFAULT NULL;
Query OK, 0 rows affected, 1 warning (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 1

mysql> SET @run_value := 100;
Query OK, 0 rows affected (0.00 sec)

mysql> 
mysql> UPDATE playerInfo
    -> JOIN (SELECT id FROM playerInfo) AS p
    -> SET runs = (@run_value := @run_value + 100)
    -> 
    -> SELECT name FROM playerinfo p
    -> left join matchplayedplayerinfo mp ON p.`id` = mp.`playerId` AND mp.`playingAs` = "Batsman"
    -> ORDER BY runs ASC
    -> LIMIT 1;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT name FROM playerinfo p
left join matchplayedplayerinfo mp ON p.`id` = mp.' at line 5
mysql> 
mysql> SELECT name FROM playerinfo p
    -> left join matchplayedplayerinfo mp ON p.`id` = mp.`playerId` AND mp.`playingAs` = "Batsman"
    -> ORDER BY runs DESC
    -> LIMIT 1;
+-----------------+
| name            |
+-----------------+
| Ravindra Jadeja |
+-----------------+
1 row in set (0.00 sec)

mysql> -- 4. Find bowler who has taken maximum wickets and bowler taken minimum wickets and display their names
Query OK, 0 rows affected (0.00 sec)

mysql> ALTER TABLE playerinfo
    -> ADD COLUMN wickets INT(11) DEFAULT NULL;
Query OK, 0 rows affected, 1 warning (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 1

mysql> 
mysql> SET @wicket_value := 100;
Query OK, 0 rows affected (0.00 sec)

mysql> 
mysql> UPDATE playerInfo
    -> JOIN (SELECT id FROM playerInfo) AS p
    -> SET wickets = (@wicket_value := @wicket_value + 100)
    -> 
    -> SELECT name FROM playerinfo p
    -> left join matchplayedplayerinfo mp ON p.`id` = mp.`playerId` AND mp.`playingAs` = "Bowler"
    -> ORDER BY wickets ASC
    -> LIMIT 1;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT name FROM playerinfo p
left join matchplayedplayerinfo mp ON p.`id` = mp.' at line 5
mysql> 
mysql> SELECT name FROM playerinfo p
    -> left join matchplayedplayerinfo mp ON p.`id` = mp.`playerId` AND mp.`playingAs` = "Bowler"
    -> ORDER BY runs DESC
    -> LIMIT 1;
+-----------------+
| name            |
+-----------------+
| Ravindra Jadeja |
+-----------------+
1 row in set (0.00 sec)

mysql> -- 5. List name of all players for given country and number of matches he has played
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT 
    ->     pi.name AS PlayerName,
    ->     COUNT(mp.matchId) AS MatchesPlayed
    -> FROM 
    ->     playerInfo pi
    -> LEFT JOIN 
    ->     matchPlayedPlayerInfo mp ON pi.id = mp.playerId
    -> LEFT JOIN 
    ->     teamInfo t ON mp.teamId = t.id
    -> WHERE 
    ->     t.country = 'India'
    -> GROUP BY 
    ->     pi.id, pi.name;
+-----------------+---------------+
| PlayerName      | MatchesPlayed |
+-----------------+---------------+
| Ravindra Jadeja |             2 |
| AB de Villiers  |             1 |
+-----------------+---------------+
2 rows in set (0.00 sec)

mysql> -- 6. List names of the countries who played matches on given location 
Query OK, 0 rows affected (0.01 sec)

mysql> SELECT DISTINCT 
    ->     mi.location AS Location, 
    ->     ti.country AS Country
    -> FROM 
    ->     matchInfo mi
    -> JOIN 
    ->     teamInfo ti 
    -> ON 
    ->     mi.teamId = ti.id OR mi.oppositionTeamId = ti.id;
+--------------------------+--------------+
| Location                 | Country      |
+--------------------------+--------------+
| Melbourne Cricket Ground | India        |
| Melbourne Cricket Ground | Australia    |
| Lord's Cricket Ground    | Australia    |
| Lord's Cricket Ground    | England      |
| Eden Gardens             | England      |
| Eden Gardens             | South Africa |
| Wankhede Stadium         | India        |
| Wankhede Stadium         | New Zealand  |
| Sydney Cricket Ground    | Australia    |
| Sydney Cricket Ground    | New Zealand  |
+--------------------------+--------------+
10 rows in set (0.00 sec)

mysql> SELECT 
    ->     ti.name AS TeamName, 
    ->     mi.location AS MatchLocation
    -> FROM 
    ->     matchInfo mi
    -> JOIN 
    ->     teamInfo ti 
    -> ON 
    ->     mi.teamId = ti.id
    -> UNION
    -> SELECT 
    ->     ti.name AS TeamName, 
    ->     mi.location AS MatchLocation
    -> FROM 
    ->     matchInfo mi
    -> JOIN 
    ->     teamInfo ti 
    -> ON 
    ->     mi.oppositionTeamId = ti.id;
+--------------+--------------------------+
| TeamName     | MatchLocation            |
+--------------+--------------------------+
| India        | Melbourne Cricket Ground |
| Australia    | Lord's Cricket Ground    |
| England      | Eden Gardens             |
| New Zealand  | Wankhede Stadium         |
| Australia    | Sydney Cricket Ground    |
| Australia    | Melbourne Cricket Ground |
| England      | Lord's Cricket Ground    |
| South Africa | Eden Gardens             |
| India        | Wankhede Stadium         |
| New Zealand  | Sydney Cricket Ground    |
+--------------+--------------------------+
10 rows in set (0.00 sec)

mysql> -- 8. List names of teams who have never played any matches
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT 
    ->     ti.name AS TeamName
    -> FROM 
    ->     teamInfo ti
    -> LEFT JOIN 
    ->     matchInfo mi 
    -> ON 
    ->     ti.id = mi.teamId OR ti.id = mi.oppositionTeamId
    -> WHERE 
    ->     mi.id IS NULL;
Empty set (0.00 sec)

mysql> -- 9. List names of the countries and total matches they played
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT 
    ->     ti.country AS Country, 
    ->     COUNT(mi.id) AS TotalMatchesPlayed
    -> FROM 
    ->     teamInfo ti
    -> LEFT JOIN 
    ->     matchInfo mi 
    -> ON 
    ->     ti.id = mi.teamId OR ti.id = mi.oppositionTeamId
    -> GROUP BY 
    ->     ti.country;
+--------------+--------------------+
| Country      | TotalMatchesPlayed |
+--------------+--------------------+
| India        |                  2 |
| Australia    |                  3 |
| England      |                  2 |
| South Africa |                  1 |
| New Zealand  |                  2 |
+--------------+--------------------+
5 rows in set (0.00 sec)

mysql> -- 10. List name of team, and name of teams against which they played matches and count they won
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT 
    ->     ti1.name AS TeamName, 
    ->     ti2.name AS OpponentTeam, 
    ->     COUNT(*) AS Wins
    -> FROM 
    ->     matchInfo mi
    -> JOIN 
    ->     teamInfo ti1 ON mi.teamId = ti1.id
    -> JOIN 
    ->     teamInfo ti2 ON mi.oppositionTeamId = ti2.id
    -> WHERE 
    ->     mi.wonTeamId = mi.teamId
    -> GROUP BY 
    ->     ti1.name, ti2.name;
+-------------+--------------+------+
| TeamName    | OpponentTeam | Wins |
+-------------+--------------+------+
| India       | Australia    |    1 |
| Australia   | New Zealand  |    1 |
| New Zealand | India        |    1 |
+-------------+--------------+------+
3 rows in set (0.00 sec)

mysql> Terminal close -- exit!
